buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url 'http://repo.spring.io/plugins-release' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'

group = 'gov.nasa.jpl.nexus.ningester'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
		url "https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/"
	}
	mavenLocal()
}

ext{
	nexusMessagesVersion = "1.2.0.RELEASE"
	protobufUtilVersion = "3.5.1"
	netcdfJavaVersion = '4.6.9'
	guavaVersion = "23.2-jre"
//	springDataCassandraVersion = '1.3.4.RELEASE'
//	springDataSolrVersion = '2.0.2.RELEASE'
}

sourceSets{
	main{
		java{
			resources{
				srcDir 'src/python'
				exclude 'src/python/test'
			}
		}
	}
	test{
		java{
			resources{
				srcDir 'src/python/test'
			}
		}
	}
}

dependencyManagement {
	imports {
		mavenBom 'com.amazonaws:aws-java-sdk-bom:1.10.77+'
	}
}

dependencies {
	optional("org.springframework.boot:spring-boot-configuration-processor")

	compile("org.springframework.boot:spring-boot-starter-batch")
	compile("org.springframework:spring-web")
	compile("org.springframework.data:spring-data-cassandra")
	compile("org.springframework.data:spring-data-solr")

	compile("com.h2database:h2")
	compile("org.nasa.jpl.nexus:nexus-messages:$nexusMessagesVersion")
	compile("com.google.protobuf:protobuf-java-util:$protobufUtilVersion")

	compile("edu.ucar:cdm:${netcdfJavaVersion}")
    compile("com.google.guava:guava")

	compile("com.amazonaws:aws-java-sdk-s3")
	compile("com.amazonaws:aws-java-sdk-dynamodb")

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.batch:spring-batch-test')
}

compileJava.dependsOn(processResources)